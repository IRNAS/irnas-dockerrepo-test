on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  base:
    runs-on: ubuntu-22.04

    permissions:
      contents: read
      packages: write

    strategy:
      matrix:
        variant:
          - zephyr_version: "v3.6.0"
            mcuboot_version: "a4eda30f5b0cfd0cf15512be9dcd559239dbfc91"

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker buildx
        uses: docker/setup-buildx-action@v3

      - name: Log into GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push ci image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./vanilla-zephyr/Dockerfile.ci
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          tags: ghcr.io/${{ github.repository_owner }}/vanilla-zephyr-ci:${{ matrix.variant.zephyr_version}}
          build-args: |
            ZEPHYR_VERSION=${{ matrix.variant.zephyr_version }}
            MCUBOOT_VERSION=${{ matrix.variant.mcuboot_version }}

      - name: Build and push dev image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./vanilla-zephyr/Dockerfile.dev
          push: ${{ github.event_name != 'pull_request' }}
          platforms: linux/amd64,linux/arm64
          provenance: false
          tags: ghcr.io/${{ github.repository_owner }}/vanilla-zephyr-ci:${{ matrix.variant.zephyr_version}}
          build-args: |
            BASE_IMAGE=ghcr.io/${{ github.repository_owner }}/zephyr:base-${{ matrix.sdk }}SDK
            ZEPHYR_VERSION=${{ matrix.variant.zephyr_version }}
            MCUBOOT_VERSION=${{ matrix.variant.mcuboot_version }}
